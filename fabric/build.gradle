plugins {
    id 'java'
    id 'idea'
    id 'maven-publish'
    id 'fabric-loom'

    id "me.modmuss50.mod-publish-plugin"
}

def ENV = System.getenv()

base {
    archivesName = "${mod_id}-fabric"
}
dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings loom.officialMojangMappings()
    modImplementation "net.fabricmc:fabric-loader:${fabric_loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_version}"
    implementation group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.1'
    implementation project(":common")

    implementation group: 'org.kohsuke.metainf-services', name: 'metainf-services', version: '1.11'
    annotationProcessor group: 'org.kohsuke.metainf-services', name: 'metainf-services', version: '1.11'
}

loom {
    if (project(":common").file("src/main/resources/${mod_id}.accesswidener").exists()) {
        accessWidenerPath.set(project(":common").file("src/main/resources/${mod_id}.accesswidener"))
    }
    mixin {
        defaultRefmapName.set("${mod_id}.refmap.json")
    }
    runs {
        client {
            client()
            setConfigName("Fabric Client")
            ideConfigGenerated(true)
            runDir("run")
        }
        server {
            server()
            setConfigName("Fabric Server")
            ideConfigGenerated(true)
            runDir("run")
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    source(project(":common").sourceSets.main.allSource)
}
tasks.withType(Javadoc).configureEach {
    source(project(":common").sourceSets.main.allJava)
}
tasks.named("sourcesJar", Jar) {
    from(project(":common").sourceSets.main.allSource)
}

processResources {
    from project(":common").sourceSets.main.resources
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId "${mod_id}-${project.name}"
            from components.java
        }
    }
    repositories {
        maven {
            name = "BrazierModdingRepository"
            url = uri("https://maven.brazier-modding.net/snapshots")
            credentials {
                username = ENV.MAVEN_UPLOAD_USERNAME
                password = ENV.MAVEN_UPLOAD_PASSWORD
            }
            authentication {
                basic(BasicAuthentication)
            }
        }
    }
}

publishMods {
    file = remapJar.archiveFile

    if(new File("../", "Changelog.md").exists())
        changelog = new File("../", "Changelog.md").text

    type = STABLE
    modLoaders.add("fabric")

    displayName = "$project.ext.mod_name - Fabric ${minecraft_version} - v${simple_version}"

    curseforge {
        projectId = curse_project
        projectSlug = curse_slug // Required for discord webhook
        accessToken = project.findProperty('curse_auth')
        minecraftVersions.add("1.20.1")
    }
}

idea {
    module {
        inheritOutputDirs = false
    }
}