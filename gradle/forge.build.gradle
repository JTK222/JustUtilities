apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
    compileOnly project(":Common")
    annotationProcessor "org.spongepowered:mixin:${mixinVersion}:processor"
}

mixin {
    add sourceSets.main, "${mod_id}.refmap.json"
    config "${mod_id}.mixins.json"
}


apply plugin: 'java'
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'org.spongepowered.mixin'

minecraft {
    mappings channel: 'official', version: minecraft_version

    runs {
        client {
            workingDirectory rootProject.file('./runs/client')
            ideaModule "${rootProject.name}.${project.name}.main".replaceAll(' ', '_');

            taskName mod_name + " - Client"
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"

            mods {
                "${project.name}" {
                    source sourceSets.main
                    source project(":Common").sourceSets.main
                }
            }
        }

        server {
            workingDirectory rootProject.file('./runs/server')

            ideaModule "${rootProject.name}.${project.name}.main".replaceAll(' ', '_');

            taskName mod_name + " - Server"
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"

            mods {
                "${project.name}" {
                    source sourceSets.main
                    source project(":Common").sourceSets.main
                }
            }
        }
    }
}

tasks.withType(JavaCompile) {
    source(project(":Common").sourceSets.main.allSource)
}

processResources {
    from project(":Common").sourceSets.main.resources
}